// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=n0);
    Not(in=sel[1], out=n1);
    Not(in=sel[2], out=n2);

    And(a=sel[0], b=true, out=y0);
    And(a=sel[1], b=true, out=y1);
    And(a=sel[2], b=true, out=y2);

    And(a=n0, b=n1, out=n0n1);
    And(a=n0, b=n2, out=n0n2);
    And(a=n1, b=n2, out=n1n2);

    And(a=y1, b=y0, out=y0y1);
    And(a=y0, b=y2, out=y0y2);
    And(a=y1, b=y2, out=y1y2);

    And(a=n0n1, b=n2, out=selA);
    And(a=n1n2, b=y0, out=selB);
    And(a=n0n2, b=y1, out=selC);
    And(a=n2, b=y0y1, out=selD);
    And(a=y2, b=n0n1, out=selE);
    And(a=n1, b=y0y2, out=selF);
    And(a=y1y2, b=n0, out=selG);
    And(a=y0y1, b=y2, out=selH);

    And(a=in, b=selA, out=a);
    And(a=in, b=selB, out=b);
    And(a=in, b=selC, out=c);
    And(a=in, b=selD, out=d);
    And(a=in, b=selE, out=e);
    And(a=in, b=selF, out=f);
    And(a=in, b=selG, out=g);
    And(a=in, b=selH, out=h);
}
