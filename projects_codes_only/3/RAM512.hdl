// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // get ram address
    And(a=address[6], b=true, out=ramAddress0);
    And(a=address[7], b=true, out=ramAddress1);
    And(a=address[8], b=true, out=ramAddress2);
    And16(
        a=true,
        b[0]=ramAddress0,
        b[1]=ramAddress1,
        b[2]=ramAddress2,
        out[0..2]=ramAddress
    );
    DMux8Way(
        in=load,
        sel=ramAddress,
        a=load0,
        b=load1,
        c=load2,
        d=load3,
        e=load4,
        f=load5,
        g=load6,
        h=load7
    );

    // get register address
    And(a=address[0], b=true, out=registerAddress0);
    And(a=address[1], b=true, out=registerAddress1);
    And(a=address[2], b=true, out=registerAddress2);
    And(a=address[3], b=true, out=registerAddress3);
    And(a=address[4], b=true, out=registerAddress4);
    And(a=address[5], b=true, out=registerAddress5);
    And16(
        a=true,
        b[0]=registerAddress0,
        b[1]=registerAddress1,
        b[2]=registerAddress2,
        b[3]=registerAddress3,
        b[4]=registerAddress4,
        b[5]=registerAddress5,
        out[0..5]=registerAddress
    );

    RAM64(in=in, load=load0, address=registerAddress, out=out0);
    RAM64(in=in, load=load1, address=registerAddress, out=out1);
    RAM64(in=in, load=load2, address=registerAddress, out=out2);
    RAM64(in=in, load=load3, address=registerAddress, out=out3);
    RAM64(in=in, load=load4, address=registerAddress, out=out4);
    RAM64(in=in, load=load5, address=registerAddress, out=out5);
    RAM64(in=in, load=load6, address=registerAddress, out=out6);
    RAM64(in=in, load=load7, address=registerAddress, out=out7);

    Mux8Way16(
        a=out0,
        b=out1,
        c=out2,
        d=out3,
        e=out4,
        f=out5,
        g=out6,
        h=out7,
        sel=ramAddress,
        out=out
    );
}
